name: Deploy to VM 

on: 
  push: 
    branches: 
      - main

jobs:
  test:
    uses: ./.github/workflows/test.yml

  deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name : Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Build and push backend image
        run: |
          cd Backend
          docker build -t ghcr.io/${{ github.repository_owner }}/backend:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository_owner }}/backend:${{ github.sha }}

      - name: Build and push frontend image
        env: 
          BACKEND_URL: https://rouhijat.fi/api/v1/public
          REVALIDATE: 180
        run: |
          cd Frontend
          docker build \
            --build-arg BACKEND_URL=${{ env.BACKEND_URL }} \
            --build-arg REVALIDATE=${{ env.REVALIDATE }} \
            --build-arg INTERNAL_BACKEND_URL=${{ secrets.INTERNAL_BACKEND_URL }} \
            --build-arg PRIVATE_BACKEND_URL=${{ secrets.PRIVATE_BACKEND_URL }} \

            -t ghcr.io/${{ github.repository_owner }}/frontend:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository_owner }}/frontend:${{ github.sha }}

      - name: Deploy to VM
        if: success()
        uses: appleboy/ssh-action@master
        with: 
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd Rouhijat/
            git pull

            backend_container=$(docker compose ps -q backend)

            echo "Creating Prisma migration..."
            docker exec $backend_container npx prisma migrate dev --create-only --name init

            export BACKEND_IMAGE=ghcr.io/${{ github.repository_owner }}/backend:${{ github.sha }}
            export FRONTEND_IMAGE=ghcr.io/${{ github.repository_owner }}/frontend:${{ github.sha }}

            docker compose down
            docker compose up -d

            echo "Deployed successfully"

