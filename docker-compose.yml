services:
  backend:
    image: ${BACKEND_IMAGE}
    env_file:
      - ./Backend/.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./Backend/media:/app/media
      - ./Backend/prisma:/app/prisma
    restart: unless-stopped


  frontend:
    image: ${FRONTEND_IMAGE}
    restart: unless-stopped
    env_file:
      - ./Frontend/.env
      

  nginx:
    depends_on:
      - backend
      - frontend
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/nginx.crt:/etc/nginx/ssl/nginx.crt
      - ./ssl/nginx.key:/etc/nginx/ssl/nginx.key
    ports:
      - "443:443"
      - "80:80"
    restart: unless-stopped

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:latest
    restart: unless-stopped
    

volumes:
  postgres-data:
