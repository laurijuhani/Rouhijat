services:
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    env_file:
      - ./Backend/.env
    depends_on:
      - postgres
      - redis
    restart: unless-stopped


  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file:
      - ./Frontend/.env
      

  nginx:
    depends_on:
      - backend
      - frontend
    image: nginx:alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl/nginx.crt:/etc/nginx/ssl/nginx.crt
      - ./ssl/nginx.key:/etc/nginx/ssl/nginx.key
    ports:
      - "443:443"
    restart: unless-stopped

  postgres:
    image: postgres:latest
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./Backend/database_initial:/docker-entrypoint-initdb.d

  redis:
    image: redis:latest
    restart: unless-stopped
    

volumes:
  postgres-data:
